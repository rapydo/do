
# API python PROXY
location /api {
    # Using a variable in proxy_pass forces re-resolution of the DNS names
    # because NGINX treats variables differently to static configuration.
    set $backend "http://apiserver.dockerized.io:8080";
    proxy_pass $backend;
    # server_name_in_redirect off;
    proxy_set_header   Host $host:$server_port;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

    include /etc/nginx/sites-enabled/security-headers;

    add_header Cache-Control "no-store" always;

    # client_body_buffer_size   8k;
    client_max_body_size 100M;
    proxy_buffering             off;
    proxy_request_buffering     off;

    # 90000 seconds = 25 hours
    proxy_connect_timeout       90000;
    proxy_send_timeout          90000;
    proxy_read_timeout          90000;
    send_timeout                90000;

    limit_req zone=api burst=${MAX_REQUESTS_BURST_API} delay=3;
    limit_req_status 429;
    # limit_req_dry_run on;
}

location /auth {
    # Using a variable in proxy_pass forces re-resolution of the DNS names
    # because NGINX treats variables differently to static configuration.
    set $backend "http://apiserver.dockerized.io:8080";
    proxy_pass $backend;
    # server_name_in_redirect off;
    proxy_set_header   Host $host:$server_port;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

    include /etc/nginx/sites-enabled/security-headers;

    add_header Cache-Control "no-store" always;

    limit_req zone=auth burst=${MAX_REQUESTS_BURST_AUTH} delay=3;
    limit_req_status 429;
    # limit_req_dry_run on;

}

location = /api {
    return 301 /api/status;
}

location = /auth {
    return 301 /auth/status;
}