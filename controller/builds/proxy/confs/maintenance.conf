upstream myupstream {

    server localhost      weight=1;

    # The keepalive parameter sets the maximum number of idle keepalive
    # connections to upstream servers that are preserved in the cache of
    # each worker process. When this number is exceeded, the least recently
    # used connections are closed.
    keepalive 100;
}

server {

    listen 80 default_server;
    listen [::]:80 default_server;
    server_tokens off;
    charset utf-8;

    client_max_body_size 75M;

    # force redirect
    location / {
        return         301 https://$http_host$request_uri;
    }
}

# Default server configuration
server {

    # SSL server
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;
    server_tokens off;

    root /usr/share/nginx/html;
    index maintenance.html;

    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;

    # Remove the Connection header if the client sends it,
    # it could be "close" to close a keepalive connection
    proxy_set_header Connection "";

    # SSL configuration
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM:DHE-DSS-AES256-GCM-SHA384:DHE-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-CCM8:DHE-DSS-AES128-GCM-SHA256:DHE-PSK-AES128-GCM-SHA256:DHE-PSK-AES128-CCM:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_session_cache shared:SSL:10m;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 5m;
    ssl_session_tickets off;
    ssl_dhparam /etc/letsencrypt/dhparam.pem;

    ssl_certificate /etc/letsencrypt/real/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/real/privkey1.pem;

    location / {
        try_files /maintenance.html =404;
    } 
}
