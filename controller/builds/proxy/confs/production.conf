upstream myupstream {

    server localhost      weight=1;

    # The keepalive parameter sets the maximum number of idle keepalive
    # connections to upstream servers that are preserved in the cache of
    # each worker process. When this number is exceeded, the least recently
    # used connections are closed.
    keepalive 100;
}

server {

    listen 80 default_server;
    listen [::]:80 default_server;

    server_tokens off;
    server_name ${DOMAIN};

    # This is required because there will be stored the .well-known challenge
    root /usr/share/nginx/html;

    charset utf-8;
    client_max_body_size 0;

    # Needed for certificates issue and renewal
    location /.well-known {
        try_files $uri /dev/null =404;
    }

    # Force redirect 80 -> 443
    location / {
        return         301 https://$http_host$request_uri;
    }
    # rewrite ^ https://$http_host$request_uri? permanent;
}


# Default server configuration
server {

    # SSL server
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;
    server_tokens off;
    server_name ${DOMAIN};
    root /app/dist_online;
    index index.html index.htm;

    # This is required to proxy pass to resolve variables
    # This is the Docker embedded DNS (beware: could it change in Rancher?)
    resolver 127.0.0.11 valid=30s;

    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;

    # Remove the Connection header if the client sends it,
    # it could be "close" to close a keepalive connection
    proxy_set_header Connection "";

    # SSL configuration
    ssl_protocols TLSv1.3 TLSv1.2;
    # strongest + strong classes + weakest + denied
    ssl_ciphers "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM:DHE-DSS-AES256-GCM-SHA384:DHE-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-CCM:ECDHE-ECDSA-AES256-CCM8:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-CCM8:DHE-DSS-AES128-GCM-SHA256:DHE-PSK-AES128-GCM-SHA256:DHE-PSK-AES128-CCM:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 5m;
    ssl_session_tickets off;
    ssl_stapling ${SSL_STAPLING};
    ssl_stapling_verify ${SSL_STAPLING};
    ssl_dhparam /etc/letsencrypt/dhparam.pem;

    ssl_certificate /etc/letsencrypt/real/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/real/privkey1.pem;

    ssl_client_certificate /etc/letsencrypt/client.pem;
    ssl_verify_client ${SSL_VERIFY_CLIENT};

    # Custom 404 - NOT FOUND
    error_page 404 /custom_404.html;
    location = /custom_404.html {
        root /usr/share/nginx/html;
        internal;
        include /etc/nginx/sites-enabled/security-headers;
    }

    # Custom 502 - BAD GATEWAY"
    error_page 502 /custom_502.html;
    location = /custom_502.html {
        root /usr/share/nginx/html;
        internal;
        include /etc/nginx/sites-enabled/security-headers;
    }

    # Custom 504 - GATEWAY TIMEOUT"
    error_page 504 /custom_504.html;
    location = /custom_504.html {
        root /usr/share/nginx/html;
        internal;
        include /etc/nginx/sites-enabled/security-headers;
    }

    location = /errors.css {
        root /usr/share/nginx/html;
        include /etc/nginx/sites-enabled/security-headers;
    }

    location = /giphy.gif {
        root /usr/share/nginx/html;
        include /etc/nginx/sites-enabled/security-headers;
    }

    include /etc/nginx/sites-enabled/*.service;
}
