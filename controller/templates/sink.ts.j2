import { Component, OnInit } from "@angular/core";

import { FormGroup } from "@angular/forms";
import { FormlyFieldConfig } from "@ngx-formly/core";

import { FormlyService } from "@rapydo/services/formly";

import { Schema, SchemaType } from "@rapydo/types";

import * as moment from "moment";

@Component({
  templateUrl: "sink.html",
})
export class SinkComponent implements OnInit {
  public form = new FormGroup({});
  public fields1: FormlyFieldConfig[] = [];
  public fields2: FormlyFieldConfig[] = [];
  public model: any = {};
  public data: any = null;

  constructor(private formly: FormlyService) {}

  ngOnInit() {
    this.fields1 = this.get_fields(null);
    this.fields2 = this.get_fields(["form-field-horizontal"]);
  }

  private get_fields(wrappers) {

    const schema: Schema[] = [
      {
        label: "Username",
        description: "email",
        key: "email",
        required: true,
        type: SchemaType.EMAIL,
      },
      {
        label: "Password",
        description: "password",
        key: "password",
        required: true,
        type: SchemaType.PASSWORD,
      },
      {
        label: "Date",
        description: "date",
        key: "date",
        required: true,
        type: SchemaType.DATE,
        // min: ??,
        // max: ??
      },
      {
        label: "URL",
        description: "url",
        key: "url",
        required: true,
        type: SchemaType.URL,
      },
      {
        label: "Radio1",
        key: "radio1",
        required: false,
        type: SchemaType.RADIO,
        options: [
          {
            value: "opt1",
            label: "Option1",
          },
          {
            value: "opt2",
            label: "Option2",
          },
        ]
      },
      {
        label: "Radio2",
        key: "radio2",
        required: false,
        type: SchemaType.RADIO_WITH_DESCRIPTION,
        options: [
          {
            value: "opt3",
            label: "Option3",
            description: "Description 3"
          },
          {
            value: "opt4",
            label: "Option4",
            description: "Description 4"
          },
        ]
      }
    ];

    let data = this.formly.json2Form(schema, {});

    if (wrappers) {
      for (let idx in data.fields) {
        data.fields[idx].wrappers = wrappers;
      }
    }

    return data.fields;
  }

  submit() {
    this.data = null;
    if (!this.form.valid) {
      return false;
    }

    this.data = this.model;
  }
}
