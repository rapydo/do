import { Component, OnInit } from "@angular/core";

import { FormGroup } from "@angular/forms";
import { FormlyFieldConfig } from "@ngx-formly/core";

import { NgxSpinnerService } from "ngx-spinner";
import { ApiService } from "@rapydo/services/api";
import { AuthService } from "@rapydo/services/auth";
import { NotificationService } from "@rapydo/services/notification";

import * as moment from 'moment';

@Component({
  templateUrl: "sink.html",
})
export class SinkComponent implements OnInit {

  public form = new FormGroup({});
  public fields1: FormlyFieldConfig[] = [];
  public fields2: FormlyFieldConfig[] = [];
  public model: any = {};
  public data: any = null;

  constructor(
    private spinner: NgxSpinnerService,
    private api: ApiService,
    private auth: AuthService,
    private notify: NotificationService,
  ) {
  }

  ngOnInit() {
    this.fields1 = this.get_fields(null);
    this.fields2 = this.get_fields(['form-field-horizontal']);

  }

  private get_fields(wrappers) {

    let m = moment();

    return [
      {
        key: "email",
        type: "input",
        templateOptions: {
          type: "email",
          label: "Username",
          placeholder: "email",
          addonLeft: {
            class: "fa fa-envelope",
          },
          required: true,
        },
        validators: { validation: ["email"] },
        wrappers: wrappers,
      },
      {
        key: "password",
        type: "input",
        templateOptions: {
          type: "password",
          label: "Password",
          placeholder: "password",
          addonLeft: {
            class: "fa fa-key",
          },
          required: true,
        },
        wrappers: wrappers,
      },
      {
        key: 'date',
        type: 'datepicker',
        templateOptions: {
          "type": 'date',
          // min: {
          //   year: 2019,
          //   month: 1,
          //   day: 1
          // },
          // max: {
          //   year: m.year(),
          //   month: 1 + m.month(),
          //   day: m.date()
          // },
          label: 'Date',
          required: false
        },
        wrappers: wrappers,
      } 
    ];
  }

    submit() {

        this.data = null;
        if (!this.form.valid) {
          return false;
        }

        this.data = this.model;
    }
}