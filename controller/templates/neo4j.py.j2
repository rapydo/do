# -*- coding: utf-8 -*-

"""
Graph DB abstraction from neo4j server.
These are custom models!

VERY IMPORTANT!
Imports and models have to be defined/used AFTER normal Graphdb connection.
"""

from neomodel import (
    StringProperty,
    IntegerProperty,
    DateProperty,
    DateTimeProperty,
    JSONProperty,
    ArrayProperty,
    FloatProperty,
    BooleanProperty,
    AliasProperty,
    # UniqueIdProperty

    StructuredRel,

    RelationshipTo,
    RelationshipFrom,

    ZeroOrMore,
    OneOrMore
)

from neomodel.util import NodeClassRegistry

from restapi.connectors.neo4j.types import IdentifiedNode, TimestampedNode

from restapi.connectors.neo4j.models import User as UserBase
# from restapi.connectors.neo4j.models import Group as GroupBase

# from restapi.utilities.logs import log


registry = NodeClassRegistry()
base_user = frozenset({'User'})
for c in registry._NODE_CLASS_REGISTRY:
    if c == base_user:
        registry._NODE_CLASS_REGISTRY.pop(base_user)
        break
"""
base_group = frozenset({'Group'})
for c in registry._NODE_CLASS_REGISTRY:
    if c == base_group:
        registry._NODE_CLASS_REGISTRY.pop(base_group)
        break
"""

# Extension of User model
class User(UserBase):
    pass

{% if not extend -%}
class RelationTest(StructuredRel):
    pp = StringProperty()


class JustATest(TimestampedNode):
    p_str = StringProperty(required=True)
    p_int = IntegerProperty()
    p_arr = ArrayProperty()
    p_json = JSONProperty()
    p_float = FloatProperty()
    p_date = DateProperty()
    p_dt = DateTimeProperty()
    p_bool = BooleanProperty()
    p_alias = AliasProperty()

    test1 = RelationshipFrom(
        'User', 'TEST', cardinality=ZeroOrMore, model=RelationTest)

    test2 = RelationshipFrom(
        'User', 'TEST2', cardinality=ZeroOrMore, model=RelationTest)
{% endif -%}