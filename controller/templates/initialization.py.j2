# from restapi.utilities.logs import log


class Initializer:
    """
    This class is instantiated just after restapi init
    Implement the constructor to add operations performed one-time at initialization
    """

    def __init__(self, services, app=None):
        # c = services['{{auth_service}}']
        pass


class Customizer:
    """
    This class is used to manipulate user information
    - custom_user_properties_pre is executed just before user creation
                             use this to removed or manipulate input properties
                             before sending to the database
    - custom_user_properties_post is executed just after user creation
                             use this to implement extra operation in user creation
                             e.g. store additional relationships
    NOTE: to be merged with custom_post_handle_user_input??
    - custom_post_handle_user_input is used just after user registration
                                    use this to perform setup operations,
                                    such as verify default settings
    """

    def custom_user_properties_pre(self, properties):
        extra_properties = {}
        # extra_properties['myfield'] = properties.pop('myfield', None)
        return properties, extra_properties

    def custom_user_properties_post(self, user, properties, extra_properties, db):
        pass

    def custom_post_handle_user_input(self, auth, user_node, properties):

        return True
