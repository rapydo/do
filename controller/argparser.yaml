options:
  project:
    alias: p
    # NOTE: this is the equivalent of the old concept of `blueprint`
    type: str
    metavalue: NAME
    help: Name of the project
    default: null

  stack:
    type: str
    metavalue: STACK
    default: null
    help: Docker-compose stack to be loaded

  no-backend:
    type: bool
    default: False
    help: Exclude backend configuration

  no-frontend:
    type: bool
    default: False
    help: Exclude frontend configuration

  no-commons:
    type: bool
    default: False
    help: Exclude project common configuration

  hostname:
    alias: H
    type: str
    metavalue: NAME
    default: localhost
    help: Hostname of the current machine

  services:
    alias: s
    type: str
    metavalue: S1,S2
    help: Comma separated list of services

  privileged:
    type: bool
    default: False
    help: Allow containers privileged mode

  production:
    alias: -prod
    type: bool
    default: False
    help: Enable production mode

  # net:
  #   type: str
  #   default: bridge
  #   help: change the docker network used

subcommands:
  dump:
    description: Dump current config into docker compose YAML

  check:
    description: Verify if current project is compliant to RAPyDo specs
    suboptions:
      ignore-submodule:
        alias: i
        type: str
        metavalue: IGNORE_SUBMODULE
        # default: 'upstream'
        help: ignore a given list of submodules (command delimited)
      no-git:
        alias: s
        type: bool
        default: False
        help: skip checks on git commits
      no-builds:
        type: bool
        default: False
        help: skip check on docker builds
  init:
    description: Make current project compliant to RAPyDo requirements
    suboptions:
      submodules-path:
        type: str
        metavalue: PATH
        help: link all submodules in an existing folder instead of download them
      force:
        alias: f
        type: bool
        # metavalue: TRUE_OR_FALSE
        default: False
        help: overwrite initialization files if already exist
  update:
    description: Update the current project
    suboptions:
      ignore-submodule:
        alias: i
        type: str
        metavalue: IGNORE_SUBMODULE
        help: ignore a given list of submodules (command delimited)

  install:
    description: Install a rapydo-controller version
    suboptions:
      version:
        help: version number or auto to automatically detect required version
        positional: true
        type: str
        metavalue: VERSION
        default: auto
      pip:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: install from pypi
      editable:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: install in editable mode from submodules folder
      user:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: install at user level (sudo not required)

  status:
    description: List current status of containers
  build:
    description: Force building of one or more services docker images
    suboptions:
      core:
        type: bool
        # metavalue: TRUE_OR_FALSE
        default: False
        help: force build of all images including core builds
      force:
        alias: f
        type: bool
        # metavalue: TRUE_OR_FALSE
        default: False
        help: remove the build cache to force the complete rebuilding
  pull:
    description: Pull available images from docker hub
  logs:
    description: Watch log tails of all or specified containers
    suboptions:
      follow:
        alias: f
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: follow logs
      tail:
        alias: t
        type: str
        metavalue: INTEGER_NUM_LINES
        default: "1000"
        help: logs
      service:
        alias: s
        type: str
        metavalue: SERVICE
        default: null
  ssl:
    description: Issue a SSL certificate with Let's Encrypt
    suboptions:
      chain-file:
        type: str
        metavalue: PATH_TO_CHAIN_FILE
        default: null
        help: path to existing chain file (.pem format)
      key-file:
        type: str
        metavalue: PATH_TO_KEY_FILE
        default: null
        help: path to existing key file (.pem format)
      volatile:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Create a volatile proxy service to request the certificate
      force:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Force Let's Encrypt to renew the certificate
      no-tty:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Disable pseudo-tty allocation, useful to execute the command from a cronjob
  # Deprecated since 0.7.3
  ssl-certificate:
    description: Deprecated command, use rapydo ssl instead
    suboptions:
      chain-file:
        type: str
        metavalue: PATH_TO_CHAIN_FILE
        default: null
        help: path to existing chain file (.pem format)
      key-file:
        type: str
        metavalue: PATH_TO_KEY_FILE
        default: null
        help: path to existing key file (.pem format)
      volatile:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Create a volatile proxy service to request the certificate
      force:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Force Let's Encrypt to renew the certificate
      no-tty:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Disable pseudo-tty allocation, useful to execute the command from a cronjob
  dhparam:
    description: Generate SSL DH DSA parameters, 4096 bit long prime
  interfaces:
    description: Run off some predefined interfaces to services
    suboptions:
      service:
        positional: true
        type: str
        metavalue: SERVICE
        default: null
      port:
        alias: p
        type: int
        metavalue: INTEGER_PORT_FOR_SERVICE
        default: null
        help: port to be associated to the current service interface
      detach:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Detached mode to run the container in background

  shell:
    description: Open a shell or execute a command onto a container
    suboptions:
      service:
        positional: true
        type: str
        metavalue: SERVICE
        default: null
      user:
        alias: u
        type: str
        metavalue: UNIX_EXISTING_USER
        default: ""
        help: user existing in selected service
      command:
        alias: c
        type: str
        metavalue: TERMINAL_COMMAND_UNIX-LIKE
        help: UNIX command to be executed on selected running service
      default-command:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Execute the default command configured for the container. Not compatible with --command and not implemented for all containers
      no-tty:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Disable pseudo-tty allocation, useful to execute the command from non interactive script
      detach:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Execute command in detach mode
  start:
    description: Start containers for this configuration
    suboptions:
      no-detach:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Disable detach mode and attach to container execution
  stop:
    description: Stop running containers, but do not remove them
  restart:
    description: Restart running containers
  remove:
    description: Stop and remove containers
    suboptions:
      networks:
        alias: -net
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: also remove containers networks
      all:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: also remove networks and persistent data stored in docker volumes

  list:
    description: Print rapydo configurations
    suboptions:
      args:
        alias: a
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List of configured rapydo arguments
      env:
        alias: e
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List environment variable (.env file)
      active-services:
        alias: s
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List running services
      submodules:
        alias: m
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: List submodules
  scale:
    description: Scale the number of containers for one service
    suboptions:
      value:
        positional: yes
        type: str
        metavalue: "SERVICE=NUM_REPLICA"
        default:
        help: scale SERVICE to NUM_REPLICA
  verify:
    description: Test if service is reachable from the backend
    suboptions:
      service:
        positional: yes
        type: str
        metavalue: SERVICE
        default: null
  volatile:
    description: Create a single-command container
    suboptions:
      service:
        positional: yes
        type: str
        metavalue: SERVICE
        default: null
      command:
        positional: no
        alias: c
        type: str
        metavalue: COMMAND
        default: bash
        help: UNIX command to be executed
      user:
        positional: no
        alias: u
        type: str
        metavalue: USER
        help: user existing in selected service
  create:
    description: Create a new rapydo project
    suboptions:
      name:
        positional: true
        type: str
        metavalue: NAME
        default: null
        help: Name of your new project
      current:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Force creation in current folder
      force:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Force files overwriting
      no-auto:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Disable automatic project creation
      add-optionals:
        type: bool
        metavalue: TRUE_OR_FALSE
        default: False
        help: Include all optionals files (html templates and customizers)
      auth:
        type: str
        metavalue: FRAMEWORK
        default: null
        help: Auth service to enable (sql, neo4j, mongo)
      frontend:
        type: str
        metavalue: FRAMEWORK
        default: null
        help: Frontend framework to enable (no, angular)
      extend:
        type: str
        metavalue: PROJECT
        default: null
        help: Extend from another project
      services:
        type: str
        metavalue: S1,S2
        default: ""
        help: Comma separated list of services to be enabled
      origin-url:
        type: str
        metavalue: URL
        default: null
        help: Set the git origin url for the project
      env:
        type: str
        metavalue: ENV_VARIABLES
        default: null
        help: Command separated list of ENV=VALUE to be added in project_configuration
  add:
    description: Add a new element
    suboptions:
      type:
        positional: true
        type: str
        metavalue: TYPE
        default: null
        help: One of endpoint, task, component or service
      name:
        positional: true
        type: str
        metavalue: NAME
        default: null
        help: Name to be assigned to the new element
  upgrade:
    description: Upgrade a project by re-applying the templates
    suboptions:
      path:
        type: str
        metavalue: PATH
        help: path of file to be upgraded
  ancestors:
    description: Find all ancestors of a docker image
    suboptions:
      imagetag:
        positional: true
        type: str
        metavalue: IMAGE_TAG_ID
        default: null
        help: Image tag ID to be inspected

  backup:
    description: Execute a backup of one service
    suboptions:
      service:
        positional: true
        type: str
        metavalue: SERVICE
        default: null

  version:
    description: Retrieve version details
