name: Test

on:
  push:
  # schedule:
  #   - cron: "0 1 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        test: [
            # Both Compose and Swarm
            compose/add_upgrade,
            swarm/add_upgrade,
            compose/base,
            swarm/base,
            compose/build_pull,
            swarm/build_pull,
            compose/create,
            swarm/create,
            compose/install,
            swarm/install,
            compose/libs,
            swarm/libs,
            compose/passwords_invalid_characters,
            swarm/passwords_invalid_characters,

            # Swarm only
            swarm/swarm,

            # Compose only
            compose/backup_restore_tuning_mariadb,
            compose/backup_restore_tuning_neo4j,
            compose/backup_restore_tuning_postgres,
            compose/backup_restore_tuning_rabbit,
            compose/backup_restore_tuning_redis,
            compose/cronjobs,
            compose/dump,
            compose/interfaces,
            compose/ssl,
            compose/volatile,
            compose/list,

            # Currently Compose only, to be generalized
            init_check_update,
            scale,
            start_shell_status_logs_restart_remove,
          ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install setuptools pytest pytest-cov pytest-timeout Faker
          pip install --upgrade --no-cache-dir --editable .
          # Needed to make git commit (used by tests) to work and prevent error: 'Author identity unknown'
          git config --global user.email "tests@rapy.do"
          git config --global user.name "RAPyDo"

          rapydo install compose

      - name: Run Tests
        env:
          LOGURU_LEVEL: DEBUG
          TESTING: 1
          TEST_NAME: ${{ matrix.test }}
        run: |
          # This works well for all tests... except for install... that is not covered :o
          # py.test --timeout=300 -s -x --cov-report=xml --cov=. tests/test_${{ matrix.test }}.py

          mkdir rapydo_tests
          cd rapydo_tests

          if [[ "${TEST_NAME}" == swarm/* ]]; then
            export SWARM_MODE="1"
            TEST_NAME=${TEST_NAME/swarm\//}
          elif [[ "${TEST_NAME}" == compose/* ]]; then
            TEST_NAME=${TEST_NAME/compose\//}
          fi

          py.test --timeout=360 --durations=5 -s -x --cov-report=xml --cov=.. ../tests/test_${TEST_NAME}.py
          cp coverage.xml ..
          cd ..

          bash <(curl -s https://codecov.io/bash)
